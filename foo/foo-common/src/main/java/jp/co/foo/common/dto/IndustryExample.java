package jp.co.foo.common.dto;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class IndustryExample extends AbstractExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table INDUSTRY
     *
     * @mbggenerated Sat Aug 03 12:17:49 JST 2013
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table INDUSTRY
     *
     * @mbggenerated Sat Aug 03 12:17:49 JST 2013
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table INDUSTRY
     *
     * @mbggenerated Sat Aug 03 12:17:49 JST 2013
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INDUSTRY
     *
     * @mbggenerated Sat Aug 03 12:17:49 JST 2013
     */
    public IndustryExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INDUSTRY
     *
     * @mbggenerated Sat Aug 03 12:17:49 JST 2013
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INDUSTRY
     *
     * @mbggenerated Sat Aug 03 12:17:49 JST 2013
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INDUSTRY
     *
     * @mbggenerated Sat Aug 03 12:17:49 JST 2013
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INDUSTRY
     *
     * @mbggenerated Sat Aug 03 12:17:49 JST 2013
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INDUSTRY
     *
     * @mbggenerated Sat Aug 03 12:17:49 JST 2013
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INDUSTRY
     *
     * @mbggenerated Sat Aug 03 12:17:49 JST 2013
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INDUSTRY
     *
     * @mbggenerated Sat Aug 03 12:17:49 JST 2013
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INDUSTRY
     *
     * @mbggenerated Sat Aug 03 12:17:49 JST 2013
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INDUSTRY
     *
     * @mbggenerated Sat Aug 03 12:17:49 JST 2013
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INDUSTRY
     *
     * @mbggenerated Sat Aug 03 12:17:49 JST 2013
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table INDUSTRY
     *
     * @mbggenerated Sat Aug 03 12:17:49 JST 2013
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> financeFlgCriteria;

        protected List<Criterion> deleteFlgCriteria;

        protected List<Criterion> allCriteria;

        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
            financeFlgCriteria = new ArrayList<Criterion>();
            deleteFlgCriteria = new ArrayList<Criterion>();
        }

        public List<Criterion> getFinanceFlgCriteria() {
            return financeFlgCriteria;
        }

        protected void addFinanceFlgCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            financeFlgCriteria.add(new Criterion(condition, value, "StringOneZeroBooleanTypeHandler"));
            allCriteria = null;
        }

        protected void addFinanceFlgCriterion(String condition, Boolean value1, Boolean value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            financeFlgCriteria.add(new Criterion(condition, value1, value2, "StringOneZeroBooleanTypeHandler"));
            allCriteria = null;
        }

        public List<Criterion> getDeleteFlgCriteria() {
            return deleteFlgCriteria;
        }

        protected void addDeleteFlgCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            deleteFlgCriteria.add(new Criterion(condition, value, "StringOneZeroBooleanTypeHandler"));
            allCriteria = null;
        }

        protected void addDeleteFlgCriterion(String condition, Boolean value1, Boolean value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            deleteFlgCriteria.add(new Criterion(condition, value1, value2, "StringOneZeroBooleanTypeHandler"));
            allCriteria = null;
        }

        public boolean isValid() {
            return criteria.size() > 0
                || financeFlgCriteria.size() > 0
                || deleteFlgCriteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            if (allCriteria == null) {
                allCriteria = new ArrayList<Criterion>();
                allCriteria.addAll(criteria);
                allCriteria.addAll(financeFlgCriteria);
                allCriteria.addAll(deleteFlgCriteria);
            }
            return allCriteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
            allCriteria = null;
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
            allCriteria = null;
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
            allCriteria = null;
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andCodeIsNull() {
            addCriterion("CODE is null");
            return (Criteria) this;
        }

        public Criteria andCodeIsNotNull() {
            addCriterion("CODE is not null");
            return (Criteria) this;
        }

        public Criteria andCodeEqualTo(String value) {
            addCriterion("CODE =", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeNotEqualTo(String value) {
            addCriterion("CODE <>", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeGreaterThan(String value) {
            addCriterion("CODE >", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeGreaterThanOrEqualTo(String value) {
            addCriterion("CODE >=", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeLessThan(String value) {
            addCriterion("CODE <", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeLessThanOrEqualTo(String value) {
            addCriterion("CODE <=", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeLike(String value) {
            addCriterion("CODE like", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeNotLike(String value) {
            addCriterion("CODE not like", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeIn(List<String> values) {
            addCriterion("CODE in", values, "code");
            return (Criteria) this;
        }

        public Criteria andCodeNotIn(List<String> values) {
            addCriterion("CODE not in", values, "code");
            return (Criteria) this;
        }

        public Criteria andCodeBetween(String value1, String value2) {
            addCriterion("CODE between", value1, value2, "code");
            return (Criteria) this;
        }

        public Criteria andCodeNotBetween(String value1, String value2) {
            addCriterion("CODE not between", value1, value2, "code");
            return (Criteria) this;
        }

        public Criteria andNameIsNull() {
            addCriterion("NAME is null");
            return (Criteria) this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("NAME is not null");
            return (Criteria) this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("NAME =", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("NAME <>", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("NAME >", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("NAME >=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("NAME <", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("NAME <=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("NAME like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("NAME not like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameIn(List<String> values) {
            addCriterion("NAME in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotIn(List<String> values) {
            addCriterion("NAME not in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("NAME between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("NAME not between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andFinanceFlgIsNull() {
            addCriterion("FINANCE_FLG is null");
            return (Criteria) this;
        }

        public Criteria andFinanceFlgIsNotNull() {
            addCriterion("FINANCE_FLG is not null");
            return (Criteria) this;
        }

        public Criteria andFinanceFlgEqualTo(Boolean value) {
            addFinanceFlgCriterion("FINANCE_FLG =", value, "financeFlg");
            return (Criteria) this;
        }

        public Criteria andFinanceFlgNotEqualTo(Boolean value) {
            addFinanceFlgCriterion("FINANCE_FLG <>", value, "financeFlg");
            return (Criteria) this;
        }

        public Criteria andFinanceFlgGreaterThan(Boolean value) {
            addFinanceFlgCriterion("FINANCE_FLG >", value, "financeFlg");
            return (Criteria) this;
        }

        public Criteria andFinanceFlgGreaterThanOrEqualTo(Boolean value) {
            addFinanceFlgCriterion("FINANCE_FLG >=", value, "financeFlg");
            return (Criteria) this;
        }

        public Criteria andFinanceFlgLessThan(Boolean value) {
            addFinanceFlgCriterion("FINANCE_FLG <", value, "financeFlg");
            return (Criteria) this;
        }

        public Criteria andFinanceFlgLessThanOrEqualTo(Boolean value) {
            addFinanceFlgCriterion("FINANCE_FLG <=", value, "financeFlg");
            return (Criteria) this;
        }

        public Criteria andFinanceFlgLike(Boolean value) {
            addFinanceFlgCriterion("FINANCE_FLG like", value, "financeFlg");
            return (Criteria) this;
        }

        public Criteria andFinanceFlgNotLike(Boolean value) {
            addFinanceFlgCriterion("FINANCE_FLG not like", value, "financeFlg");
            return (Criteria) this;
        }

        public Criteria andFinanceFlgIn(List<Boolean> values) {
            addFinanceFlgCriterion("FINANCE_FLG in", values, "financeFlg");
            return (Criteria) this;
        }

        public Criteria andFinanceFlgNotIn(List<Boolean> values) {
            addFinanceFlgCriterion("FINANCE_FLG not in", values, "financeFlg");
            return (Criteria) this;
        }

        public Criteria andFinanceFlgBetween(Boolean value1, Boolean value2) {
            addFinanceFlgCriterion("FINANCE_FLG between", value1, value2, "financeFlg");
            return (Criteria) this;
        }

        public Criteria andFinanceFlgNotBetween(Boolean value1, Boolean value2) {
            addFinanceFlgCriterion("FINANCE_FLG not between", value1, value2, "financeFlg");
            return (Criteria) this;
        }

        public Criteria andDeleteFlgIsNull() {
            addCriterion("DELETE_FLG is null");
            return (Criteria) this;
        }

        public Criteria andDeleteFlgIsNotNull() {
            addCriterion("DELETE_FLG is not null");
            return (Criteria) this;
        }

        public Criteria andDeleteFlgEqualTo(Boolean value) {
            addDeleteFlgCriterion("DELETE_FLG =", value, "deleteFlg");
            return (Criteria) this;
        }

        public Criteria andDeleteFlgNotEqualTo(Boolean value) {
            addDeleteFlgCriterion("DELETE_FLG <>", value, "deleteFlg");
            return (Criteria) this;
        }

        public Criteria andDeleteFlgGreaterThan(Boolean value) {
            addDeleteFlgCriterion("DELETE_FLG >", value, "deleteFlg");
            return (Criteria) this;
        }

        public Criteria andDeleteFlgGreaterThanOrEqualTo(Boolean value) {
            addDeleteFlgCriterion("DELETE_FLG >=", value, "deleteFlg");
            return (Criteria) this;
        }

        public Criteria andDeleteFlgLessThan(Boolean value) {
            addDeleteFlgCriterion("DELETE_FLG <", value, "deleteFlg");
            return (Criteria) this;
        }

        public Criteria andDeleteFlgLessThanOrEqualTo(Boolean value) {
            addDeleteFlgCriterion("DELETE_FLG <=", value, "deleteFlg");
            return (Criteria) this;
        }

        public Criteria andDeleteFlgLike(Boolean value) {
            addDeleteFlgCriterion("DELETE_FLG like", value, "deleteFlg");
            return (Criteria) this;
        }

        public Criteria andDeleteFlgNotLike(Boolean value) {
            addDeleteFlgCriterion("DELETE_FLG not like", value, "deleteFlg");
            return (Criteria) this;
        }

        public Criteria andDeleteFlgIn(List<Boolean> values) {
            addDeleteFlgCriterion("DELETE_FLG in", values, "deleteFlg");
            return (Criteria) this;
        }

        public Criteria andDeleteFlgNotIn(List<Boolean> values) {
            addDeleteFlgCriterion("DELETE_FLG not in", values, "deleteFlg");
            return (Criteria) this;
        }

        public Criteria andDeleteFlgBetween(Boolean value1, Boolean value2) {
            addDeleteFlgCriterion("DELETE_FLG between", value1, value2, "deleteFlg");
            return (Criteria) this;
        }

        public Criteria andDeleteFlgNotBetween(Boolean value1, Boolean value2) {
            addDeleteFlgCriterion("DELETE_FLG not between", value1, value2, "deleteFlg");
            return (Criteria) this;
        }

        public Criteria andVersionIsNull() {
            addCriterion("VERSION is null");
            return (Criteria) this;
        }

        public Criteria andVersionIsNotNull() {
            addCriterion("VERSION is not null");
            return (Criteria) this;
        }

        public Criteria andVersionEqualTo(Integer value) {
            addCriterion("VERSION =", value, "version");
            return (Criteria) this;
        }

        public Criteria andVersionNotEqualTo(Integer value) {
            addCriterion("VERSION <>", value, "version");
            return (Criteria) this;
        }

        public Criteria andVersionGreaterThan(Integer value) {
            addCriterion("VERSION >", value, "version");
            return (Criteria) this;
        }

        public Criteria andVersionGreaterThanOrEqualTo(Integer value) {
            addCriterion("VERSION >=", value, "version");
            return (Criteria) this;
        }

        public Criteria andVersionLessThan(Integer value) {
            addCriterion("VERSION <", value, "version");
            return (Criteria) this;
        }

        public Criteria andVersionLessThanOrEqualTo(Integer value) {
            addCriterion("VERSION <=", value, "version");
            return (Criteria) this;
        }

        public Criteria andVersionIn(List<Integer> values) {
            addCriterion("VERSION in", values, "version");
            return (Criteria) this;
        }

        public Criteria andVersionNotIn(List<Integer> values) {
            addCriterion("VERSION not in", values, "version");
            return (Criteria) this;
        }

        public Criteria andVersionBetween(Integer value1, Integer value2) {
            addCriterion("VERSION between", value1, value2, "version");
            return (Criteria) this;
        }

        public Criteria andVersionNotBetween(Integer value1, Integer value2) {
            addCriterion("VERSION not between", value1, value2, "version");
            return (Criteria) this;
        }

        public Criteria andUpdatedAccountIsNull() {
            addCriterion("UPDATED_ACCOUNT is null");
            return (Criteria) this;
        }

        public Criteria andUpdatedAccountIsNotNull() {
            addCriterion("UPDATED_ACCOUNT is not null");
            return (Criteria) this;
        }

        public Criteria andUpdatedAccountEqualTo(String value) {
            addCriterion("UPDATED_ACCOUNT =", value, "updatedAccount");
            return (Criteria) this;
        }

        public Criteria andUpdatedAccountNotEqualTo(String value) {
            addCriterion("UPDATED_ACCOUNT <>", value, "updatedAccount");
            return (Criteria) this;
        }

        public Criteria andUpdatedAccountGreaterThan(String value) {
            addCriterion("UPDATED_ACCOUNT >", value, "updatedAccount");
            return (Criteria) this;
        }

        public Criteria andUpdatedAccountGreaterThanOrEqualTo(String value) {
            addCriterion("UPDATED_ACCOUNT >=", value, "updatedAccount");
            return (Criteria) this;
        }

        public Criteria andUpdatedAccountLessThan(String value) {
            addCriterion("UPDATED_ACCOUNT <", value, "updatedAccount");
            return (Criteria) this;
        }

        public Criteria andUpdatedAccountLessThanOrEqualTo(String value) {
            addCriterion("UPDATED_ACCOUNT <=", value, "updatedAccount");
            return (Criteria) this;
        }

        public Criteria andUpdatedAccountLike(String value) {
            addCriterion("UPDATED_ACCOUNT like", value, "updatedAccount");
            return (Criteria) this;
        }

        public Criteria andUpdatedAccountNotLike(String value) {
            addCriterion("UPDATED_ACCOUNT not like", value, "updatedAccount");
            return (Criteria) this;
        }

        public Criteria andUpdatedAccountIn(List<String> values) {
            addCriterion("UPDATED_ACCOUNT in", values, "updatedAccount");
            return (Criteria) this;
        }

        public Criteria andUpdatedAccountNotIn(List<String> values) {
            addCriterion("UPDATED_ACCOUNT not in", values, "updatedAccount");
            return (Criteria) this;
        }

        public Criteria andUpdatedAccountBetween(String value1, String value2) {
            addCriterion("UPDATED_ACCOUNT between", value1, value2, "updatedAccount");
            return (Criteria) this;
        }

        public Criteria andUpdatedAccountNotBetween(String value1, String value2) {
            addCriterion("UPDATED_ACCOUNT not between", value1, value2, "updatedAccount");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtIsNull() {
            addCriterion("UPDATED_AT is null");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtIsNotNull() {
            addCriterion("UPDATED_AT is not null");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtEqualTo(Date value) {
            addCriterion("UPDATED_AT =", value, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtNotEqualTo(Date value) {
            addCriterion("UPDATED_AT <>", value, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtGreaterThan(Date value) {
            addCriterion("UPDATED_AT >", value, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtGreaterThanOrEqualTo(Date value) {
            addCriterion("UPDATED_AT >=", value, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtLessThan(Date value) {
            addCriterion("UPDATED_AT <", value, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtLessThanOrEqualTo(Date value) {
            addCriterion("UPDATED_AT <=", value, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtIn(List<Date> values) {
            addCriterion("UPDATED_AT in", values, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtNotIn(List<Date> values) {
            addCriterion("UPDATED_AT not in", values, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtBetween(Date value1, Date value2) {
            addCriterion("UPDATED_AT between", value1, value2, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtNotBetween(Date value1, Date value2) {
            addCriterion("UPDATED_AT not between", value1, value2, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAccountIsNull() {
            addCriterion("CREATED_ACCOUNT is null");
            return (Criteria) this;
        }

        public Criteria andCreatedAccountIsNotNull() {
            addCriterion("CREATED_ACCOUNT is not null");
            return (Criteria) this;
        }

        public Criteria andCreatedAccountEqualTo(String value) {
            addCriterion("CREATED_ACCOUNT =", value, "createdAccount");
            return (Criteria) this;
        }

        public Criteria andCreatedAccountNotEqualTo(String value) {
            addCriterion("CREATED_ACCOUNT <>", value, "createdAccount");
            return (Criteria) this;
        }

        public Criteria andCreatedAccountGreaterThan(String value) {
            addCriterion("CREATED_ACCOUNT >", value, "createdAccount");
            return (Criteria) this;
        }

        public Criteria andCreatedAccountGreaterThanOrEqualTo(String value) {
            addCriterion("CREATED_ACCOUNT >=", value, "createdAccount");
            return (Criteria) this;
        }

        public Criteria andCreatedAccountLessThan(String value) {
            addCriterion("CREATED_ACCOUNT <", value, "createdAccount");
            return (Criteria) this;
        }

        public Criteria andCreatedAccountLessThanOrEqualTo(String value) {
            addCriterion("CREATED_ACCOUNT <=", value, "createdAccount");
            return (Criteria) this;
        }

        public Criteria andCreatedAccountLike(String value) {
            addCriterion("CREATED_ACCOUNT like", value, "createdAccount");
            return (Criteria) this;
        }

        public Criteria andCreatedAccountNotLike(String value) {
            addCriterion("CREATED_ACCOUNT not like", value, "createdAccount");
            return (Criteria) this;
        }

        public Criteria andCreatedAccountIn(List<String> values) {
            addCriterion("CREATED_ACCOUNT in", values, "createdAccount");
            return (Criteria) this;
        }

        public Criteria andCreatedAccountNotIn(List<String> values) {
            addCriterion("CREATED_ACCOUNT not in", values, "createdAccount");
            return (Criteria) this;
        }

        public Criteria andCreatedAccountBetween(String value1, String value2) {
            addCriterion("CREATED_ACCOUNT between", value1, value2, "createdAccount");
            return (Criteria) this;
        }

        public Criteria andCreatedAccountNotBetween(String value1, String value2) {
            addCriterion("CREATED_ACCOUNT not between", value1, value2, "createdAccount");
            return (Criteria) this;
        }

        public Criteria andCreatedAtIsNull() {
            addCriterion("CREATED_AT is null");
            return (Criteria) this;
        }

        public Criteria andCreatedAtIsNotNull() {
            addCriterion("CREATED_AT is not null");
            return (Criteria) this;
        }

        public Criteria andCreatedAtEqualTo(Date value) {
            addCriterion("CREATED_AT =", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtNotEqualTo(Date value) {
            addCriterion("CREATED_AT <>", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtGreaterThan(Date value) {
            addCriterion("CREATED_AT >", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtGreaterThanOrEqualTo(Date value) {
            addCriterion("CREATED_AT >=", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtLessThan(Date value) {
            addCriterion("CREATED_AT <", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtLessThanOrEqualTo(Date value) {
            addCriterion("CREATED_AT <=", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtIn(List<Date> values) {
            addCriterion("CREATED_AT in", values, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtNotIn(List<Date> values) {
            addCriterion("CREATED_AT not in", values, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtBetween(Date value1, Date value2) {
            addCriterion("CREATED_AT between", value1, value2, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtNotBetween(Date value1, Date value2) {
            addCriterion("CREATED_AT not between", value1, value2, "createdAt");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table INDUSTRY
     *
     * @mbggenerated do_not_delete_during_merge Sat Aug 03 12:17:49 JST 2013
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table INDUSTRY
     *
     * @mbggenerated Sat Aug 03 12:17:49 JST 2013
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
    
    public static void main(String[] args) {
		IndustryExample example = new IndustryExample();
		example.createCriteria();
	}
}